---
  - name: check pacemaker status
    stat: path=/root/pacemaker.already.setup
    register: pacemaker_status

  - name: authenticate all nodes
    command: pcs cluster auth {{ node01 }} {{ node02 }} -u {{ pacemaker_user }} -p {{ pacemaker_password }}
    when: pacemaker_status.stat.exists == false

  - name: setup cluster message bus
    command: pcs cluster setup --name {{ pacemaker_cluster_name }} {{ node01 }} {{ node02 }} --force
    when: pacemaker_status.stat.exists == false

  - name: start all cluster nodes
    command: pcs cluster start --all
    when: pacemaker_status.stat.exists == false

  - name: enable the cluster on all nodes
    command: pcs cluster enable --all
    when: pacemaker_status.stat.exists == false

  - name: set default resource stickiness
    command: pcs resource defaults resource-stickiness={{ stickiness }}

  - name: set stonith status
    command: pcs property set stonith-enabled={{ stonith_status }}

  - name: set quorum policy
    command: pcs property set no-quorum-policy={{ quorum_policy }}

  - name: delete resource ClusterIP
    command: pcs resource delete ClusterIP --force
    ignore_errors: true

  - name: wait 3 seconds
    pause: seconds=3

  - name: create resource ClusterIP
    command: pcs resource create ClusterIP ocf:heartbeat:IPaddr2 ip={{ clusterip }} cidr_netmask={{ clusterip_netmask }} op monitor interval={{ clusterip_interval }}s --force
    ignore_errors: true

  - name: create resource Nginx
    command: pcs resource create Nginx systemd:nginx op monitor interval={{ nginx_interval }}s --force
    ignore_errors: true

  - name: create resource PHP-FPM
    command: pcs resource create PHP-FPM systemd:php-fpm op monitor interval={{ phpfpm_interval }}s --force
    ignore_errors: true

  - name: add Nginx and PHP-FPM in Web group
    command: pcs resource group add Web Nginx PHP-FPM
    ignore_errors: yes

  - name: setup colocation
    ignore_errors: yes
    command: pcs constraint colocation add Web with ClusterIP INFINITY --force

  - name: setup order
    ignore_errors: yes
    command: pcs constraint order ClusterIP then Web --force

  - name: set pacemaker status 'already'
    file: path=/root/pacemaker.already.setup state=touch owner=root group=root mode=0600

  - name: Get Slave Status
    mysql_replication: master_user={{ mysql_replication_user }} master_password={{ mysql_replication_password }} mode=getslave 
    register: slave_status
    ignore_errors: true

  - name: Stop Slave
    mysql_replication: master_user={{ mysql_replication_user }} master_password={{ mysql_replication_password }} mode=stopslave
    when: slave_status|failed or slave_status.Slave_SQL_Running != "Yes"

  - name: Get Master Status
    mysql_replication: master_user={{ mysql_replication_user }} master_password={{ mysql_replication_password }} mode=getmaster
    register: master_status
    ignore_errors: true

  - name: Resync with Master 
    mysql_replication: master_user={{ mysql_replication_user }} master_password={{ mysql_replication_password }} mode=changemaster master_host={{ node02 }} master_log_file={{ master_status.File }} master_log_pos={{ master_status.Position }}
    when: slave_status|failed or slave_status.Slave_SQL_Running != "Yes" 

  - name: Start Slave after resync
    mysql_replication: master_user={{ mysql_replication_user }} master_password={{ mysql_replication_password }} mode=startslave
    when: slave_status|failed or slave_status.Slave_SQL_Running != "Yes"
